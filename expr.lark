TRUE: "true"
FALSE: "false"
ID: /(?!(true|false|show|read|track)\b)[a-zA-Z_][a-zA-Z0-9_]*/

// ----- For DSL ----- //
NOTE_PITCH: "C-1" | "C#-1" | "D-1" | "D#-1" | "E-1" | "F-1" | "F#-1" | "G-1" | "G#-1" | "A-1" | "A#-1" | "B-1"
           | "C0" | "C#0" | "D0" | "D#0" | "E0" | "F0" | "F#0" | "G0" | "G#0" | "A0" | "A#0" | "B0"
           | "C1" | "C#1" | "D1" | "D#1" | "E1" | "F1" | "F#1" | "G1" | "G#1" | "A1" | "A#1" | "B1"
           | "C2" | "C#2" | "D2" | "D#2" | "E2" | "F2" | "F#2" | "G2" | "G#2" | "A2" | "A#2" | "B2"
           | "C3" | "C#3" | "D3" | "D#3" | "E3" | "F3" | "F#3" | "G3" | "G#3" | "A3" | "A#3" | "B3"
           | "C4" | "C#4" | "D4" | "D#4" | "E4" | "F4" | "F#4" | "G4" | "G#4" | "A4" | "A#4" | "B4"
           | "C5" | "C#5" | "D5" | "D#5" | "E5" | "F5" | "F#5" | "G5" | "G#5" | "A5" | "A#5" | "B5"
           | "C6" | "C#6" | "D6" | "D#6" | "E6" | "F6" | "F#6" | "G6" | "G#6" | "A6" | "A#6" | "B6"
           | "C7" | "C#7" | "D7" | "D#7" | "E7" | "F7" | "F#7" | "G7" | "G#7" | "A7" | "A#7" | "B7"
           | "C8" | "C#8" | "D8" | "D#8" | "E8" | "F8" | "F#8" | "G8" | "G#8" | "A8" | "A#8" | "B8"
           | "C9" | "C#9" | "D9" | "D#9" | "E9" | "F9" | "F#9" | "G9"
           | "R"
//

%import common.INT -> INT
%import common.WS
%ignore WS


?expr0: expr1 ";" expr0 -> seq
      | expr1

?expr1: ID ":=" expr1 -> assign
      | "show" expr1 -> show
      | "if" expr0 "then" expr0 "else" expr1 -> if_expr
      | expr2

?expr2: expr2 "||" expr3 -> or_expr
      | expr3

?expr3: expr3 "&&" expr4 -> and_expr
      | expr4

?expr4: "!" expr4 -> not_expr
      | expr5

?expr5: expr6
      | expr6 "==" expr6 -> eq
      | expr6 "!=" expr6 -> neq
      | expr6 "<" expr6  -> lt
      | expr6 "<=" expr6 -> lore
      | expr6 ">" expr6  -> gt
      | expr6 ">=" expr6 -> gore


?expr6: expr6 "+" term  -> plus
      | expr6 "-" term -> minus
      | term

?term: term "*" factor -> times
     | term "/" factor -> divide
     | factor

?factor: "-" factor  -> neg
       | application

?application: atom
            | application "(" expr0 ")"  -> app

?atom: TRUE -> true
     | FALSE -> false
     | ID  -> id
     | INT -> int
     | "(" expr0 ")"
     | "let" ID "=" expr0 "in" expr0 "end" -> let
     | "letfun" ID "(" expr0 ")" "=" expr0 "in" expr0 "end" -> letfun
     | "read" -> read
     | note
     | tune
     | concat_tunes
     | transpose
     | repeat
     | volume
     | track

// ----- For DSL ----- //
note: "note" NOTE_PITCH "for" expr0 "seconds" -> note
tune: "tune" "[" note_list "]" "(" expr0 ")"-> tune
concat_tunes: tune "++" tune -> concat_tunes
transpose: "transpose" tune "by" expr0 -> transpose
repeat: "repeat" "(" tunes "," expr0 ")" -> repeat 
volume: "volume" "(" tunes "," expr0 ")" -> volume
track: "track" "[" note_list "]" -> track

note_list: [tunes ("," tunes)*]
      
?tunes: note
      | tune
      | repeat
      | volume
//